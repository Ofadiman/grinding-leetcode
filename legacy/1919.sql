create table if not exists listens
(
    user_id int,
    song_id int,
    day     date
);
create table if not exists friendship
(
    user1_id int,
    user2_id int
);
truncate table listens;
insert into listens (user_id, song_id, day)
values (4, 1787, '2021-07-06'),
       (4, 1787, '2021-07-18'),
       (4, 1787, '2021-07-26'),
       (4, 1787, '2021-07-22'),
       (4, 1787, '2021-07-07'),
       (4, 1129, '2021-07-29'),
       (4, 1129, '2021-07-24'),
       (4, 1129, '2021-07-05'),
       (4, 1129, '2021-07-04'),
       (4, 1129, '2021-07-29'),
       (4, 1358, '2021-07-11'),
       (4, 1358, '2021-07-02'),
       (4, 1358, '2021-07-07'),
       (4, 1358, '2021-07-01'),
       (4, 1358, '2021-07-18'),
       (4, 1358, '2021-07-03'),
       (12, 1787, '2021-07-17'),
       (12, 1787, '2021-07-12'),
       (12, 1787, '2021-07-06'),
       (12, 1787, '2021-07-17'),
       (12, 1787, '2021-07-22'),
       (12, 1129, '2021-07-31'),
       (12, 1129, '2021-07-16'),
       (12, 1129, '2021-07-28'),
       (12, 1129, '2021-07-08'),
       (12, 1129, '2021-07-28'),
       (12, 1129, '2021-07-14'),
       (12, 1129, '2021-07-26'),
       (12, 1358, '2021-07-28'),
       (12, 1358, '2021-07-31'),
       (12, 1358, '2021-07-21'),
       (12, 1358, '2021-07-19'),
       (13, 1787, '2021-07-28'),
       (13, 1787, '2021-07-25'),
       (13, 1787, '2021-07-20'),
       (13, 1787, '2021-07-22'),
       (13, 1787, '2021-07-11'),
       (13, 1787, '2021-07-26'),
       (13, 1129, '2021-07-19'),
       (13, 1129, '2021-07-08'),
       (13, 1129, '2021-07-23'),
       (13, 1129, '2021-07-25'),
       (13, 1129, '2021-07-14'),
       (13, 1358, '2021-07-11'),
       (13, 1358, '2021-07-03'),
       (13, 1358, '2021-07-26'),
       (13, 1358, '2021-07-20'),
       (13, 1358, '2021-07-02'),
       (13, 1358, '2021-07-29'),
       (13, 1358, '2021-07-17'),
       (2, 1787, '2021-07-30'),
       (2, 1787, '2021-07-24'),
       (2, 1787, '2021-07-13'),
       (2, 1787, '2021-07-14'),
       (2, 1787, '2021-07-15'),
       (2, 1787, '2021-07-16'),
       (2, 1129, '2021-07-04'),
       (2, 1129, '2021-07-21'),
       (2, 1129, '2021-07-24'),
       (2, 1129, '2021-07-02'),
       (2, 1129, '2021-07-09'),
       (2, 1129, '2021-07-18'),
       (2, 1129, '2021-07-04'),
       (2, 1358, '2021-07-10'),
       (2, 1358, '2021-07-09'),
       (2, 1358, '2021-07-16'),
       (2, 1358, '2021-07-18'),
       (7, 1787, '2021-07-17'),
       (7, 1787, '2021-07-08'),
       (7, 1787, '2021-07-24'),
       (7, 1787, '2021-07-04'),
       (7, 1787, '2021-07-23'),
       (7, 1787, '2021-07-31'),
       (7, 1129, '2021-07-18'),
       (7, 1129, '2021-07-27'),
       (7, 1129, '2021-07-30'),
       (7, 1129, '2021-07-11'),
       (7, 1129, '2021-07-26'),
       (7, 1129, '2021-07-11'),
       (7, 1129, '2021-07-05'),
       (7, 1358, '2021-07-10'),
       (7, 1358, '2021-07-05'),
       (7, 1358, '2021-07-14'),
       (7, 1358, '2021-07-03'),
       (7, 1358, '2021-07-23'),
       (8, 1787, '2021-07-15'),
       (8, 1787, '2021-07-12'),
       (8, 1787, '2021-07-11'),
       (8, 1787, '2021-07-15'),
       (8, 1787, '2021-07-17'),
       (8, 1129, '2021-07-15'),
       (8, 1129, '2021-07-28'),
       (8, 1129, '2021-07-10'),
       (8, 1129, '2021-07-10'),
       (8, 1129, '2021-07-02'),
       (8, 1129, '2021-07-19'),
       (8, 1358, '2021-07-05'),
       (8, 1358, '2021-07-22'),
       (8, 1358, '2021-07-15'),
       (8, 1358, '2021-07-03'),
       (8, 1358, '2021-07-16'),
       (10, 1787, '2021-07-31'),
       (10, 1787, '2021-07-25'),
       (10, 1787, '2021-07-28'),
       (10, 1787, '2021-07-28'),
       (10, 1129, '2021-07-30'),
       (10, 1129, '2021-07-30'),
       (10, 1129, '2021-07-12'),
       (10, 1129, '2021-07-18'),
       (10, 1129, '2021-07-26'),
       (10, 1358, '2021-07-08'),
       (10, 1358, '2021-07-24'),
       (10, 1358, '2021-07-24'),
       (10, 1358, '2021-07-13'),
       (10, 1358, '2021-07-24'),
       (10, 1358, '2021-07-13'),
       (10, 1358, '2021-07-25');
insert into friendship (user1_id, user2_id)
values (4, 12),
       (2, 4),
       (4, 7),
       (4, 8),
       (4, 10),
       (12, 13),
       (2, 12),
       (8, 12),
       (2, 13),
       (7, 13),
       (8, 13),
       (10, 13),
       (2, 8),
       (2, 10),
       (7, 8),
       (7, 10),
       (8, 10);

-- Solution
select distinct user1_id, user2_id
from friendship
         inner join listens f1 on friendship.user1_id = f1.user_id
         inner join listens f2 on friendship.user2_id = f2.user_id
where f1.day = f2.day
  and f1.song_id = f2.song_id
group by user1_id, user2_id, f1.day
having count(distinct f1.song_id) >= 3;
-- Solution
